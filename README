# MODBUS USING ESP32

This project is a demonstration of a school project that involves creating a MODBUS TCP server using an ESP32. The goal is to implement a calibration system for three different sensors. The project includes both the ESP32 code (located in the `/hardware` folder) and a Node.js client with WebSocket integration for rendering the UI.

## Project Structure

- **ESP32 Code**: The ESP32 acts as a MODBUS TCP server and is responsible for handling sensor data and calibration logic. The code for the ESP32 is located in the `/hardware` folder.
- **Node.js Client**: A Node.js application serves as the client, providing a WebSocket-based interface to communicate with the ESP32 server and render the UI.

## Features

- MODBUS TCP server implemented on ESP32.
- Calibration system for three sensors.
- Real-time data communication between the ESP32 and the Node.js client using WebSockets.
- Interactive UI for monitoring and controlling the calibration process.

## Installation

To set up the Node.js client, follow these steps:

1. Install the required dependencies:
```bash
   npm install

2. Start the client:
```bash
    npm start